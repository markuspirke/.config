# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = ['exec-and-forget sketchybar']

exec-on-workspace-change = ['/bin/bash', '-c',
    'sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE'
]
# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodies#disable-hide-app
automatically-unhide-macos-hidden-apps = false

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
preset = 'qwerty'
# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.

# floating windows 
#[[on-window-detected]]
#if.app-name-regex-substring = 'finder'
#run = 'layout floating'
#if.app-name-regex-substring = 'finder'
#run = 'layout floating'

#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 10
inner.vertical =   10
outer.left =       10
outer.bottom =     10
outer.top =        10
outer.right =      10

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]
ctrl-alt-enter = '''exec-and-forget osascript -e '
on is_running(appName)
	tell application "System Events" to (name of processes) contains appName
end is_running
if not is_running("iTerm2") then
	tell application "iTerm2" to activate
else
	tell application "System Events" to tell process "iTerm2"
		click menu item "New Window" of menu 1 of menu bar item "Shell" of menu bar 1
	end tell
end if'
'''

ctrl-alt-f = '''exec-and-forget osascript -e '
on is_running(appName)
	tell application "System Events" to (name of processes) contains appName
end is_running
if not is_running("Finder") then
	tell application "Finder" to activate
else
	tell application "System Events" to tell process "Finder"
		click menu item "New Finder Window" of menu 1 of menu bar item "File" of menu bar 1
	end tell
end if'
'''
# See: https://nikitabobko.github.io/AeroSpace/commands#layout
alt-slash = 'layout tiles horizontal vertical'
alt-comma = 'layout accordion horizontal vertical'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
alt-shift-h = 'focus left'
alt-shift-j = 'focus down'
alt-shift-k = 'focus up'
alt-shift-l = 'focus right'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
alt-shift-ctrl-h = 'move left'
alt-shift-ctrl-j = 'move down'
alt-shift-ctrl-k = 'move up'
alt-shift-ctrl-l = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
alt-shift-minus = 'resize smart -100'
alt-shift-equal = 'resize smart +100'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
alt-1 = 'workspace 1'
alt-2 = 'workspace 2'
alt-0 = 'workspace 0'
alt-b = 'workspace B'
alt-c = 'workspace C'
alt-e = 'workspace E'
alt-p = 'workspace P'
alt-m = 'workspace M'
alt-r = 'workspace R'
alt-s = 'workspace S'
alt-t = 'workspace T'
alt-z = 'workspace Z'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
alt-shift-1 = 'move-node-to-workspace 1'
alt-shift-2 = 'move-node-to-workspace 2'
alt-shift-0 = 'move-node-to-workspace 0'
alt-shift-b = 'move-node-to-workspace B'
alt-shift-c = 'move-node-to-workspace C'
alt-shift-e = 'move-node-to-workspace E'
alt-shift-p = 'move-node-to-workspace P'
alt-shift-m = 'move-node-to-workspace M'
alt-shift-r = 'move-node-to-workspace R'
alt-shift-s = 'move-node-to-workspace S'
alt-shift-t = 'move-node-to-workspace T'
alt-shift-z = 'move-node-to-workspace Z'

#go to fullscreen
alt-shift-f = 'fullscreen'
# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
alt-tab = 'workspace-back-and-forth'
# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-shift-semicolon = 'mode service'
alt-shift-enter = 'mode apps'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
f = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout
backspace = ['close-all-windows-but-current', 'mode main']

# sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
#s = ['layout sticky tiling', 'mode main']

alt-shift-h = ['join-with left', 'mode main']
alt-shift-j = ['join-with down', 'mode main']
alt-shift-k = ['join-with up', 'mode main']
alt-shift-l = ['join-with right', 'mode main']

down = 'volume down'
up = 'volume up'
shift-down = ['volume set 0', 'mode main']

[mode.apps.binding]
alt-t = ['exec-and-forget open -a /Applications/iTerm.app', 'mode main']
alt-s = ['exec-and-forget open -a /Applications/Spotify.app', 'mode main']
alt-z = ['exec-and-forget open -a /Applications/Zotero.app', 'mode main']

# multiple monitors
[workspace-to-monitor-force-assignment]
1 = 'build_in'
2 = 'main'
0 = ['u2790b', 'secondary', 'build_in']
B = ['u27p2g6b', 'secondary', 'build_in']
C = ['u27p2g6b', 'secondary', 'build_in']
E = ['u2790b', 'secondary', 'build_in']
P = ['u2790b', 'secondary', 'build_in']
M = ['u27p2g6b', 'secondary', 'build_in']
S = 'build_in'
R = ['u27p2g6b', 'secondary', 'build_in']
T = ['u2790b', 'secondary', 'build_in']
Z = 'secondary'
